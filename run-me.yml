---
- hosts: localhost
  tasks:
    - name: Rm old keys
      shell: rm ~/.ssh/id_rsa.pub
      ignore_errors: true
    - name: Rm old keys
      shell: rm ~/.ssh/id_rsa
      ignore_errors: true
    - name: SSH keygen
      shell: ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa
      ignore_errors: true
#      user:
#        name: "root"
#       generate_ssh_key: yes
#       ssh_key_type: rsa
#       ssh_key_bits: 4096
#       ssh_key_file: .ssh/id_rsa
#       force: no
    - name: Public key for proj1
      shell: sshpass -p toortoor ssh-copy-id root@10.11.14.71
      ignore_errors: true
    - name: Public key for proj2
      shell: sshpass -p toortoor ssh-copy-id root@10.11.14.72
      ignore_errors: true
    - name: Public key for proj3
      shell: sshpass -p toortoor ssh-copy-id root@10.11.14.73
      ignore_errors: true
- hosts: all
  vars_files:
    - ./Users/privvars.yml
  tasks:
    - name: Apt update
      apt:
        update_cache: yes
      ignore_errors: true
    - name: Packages installation
      apt:
        pkg:
          - curl
          - docker
          - docker.io
      ignore_errors: true
    - name: SSH ports
      copy:
        src: ./sshd_config
        dest: /etc/ssh/sshd_config
      ignore_errors: true
    - name: Ufw port 22
      ufw:
        rule: allow
        port: '22'
        proto: tcp
    - name: Ufw port 1834 
      ufw:
        rule: allow
        port: '1834'
        proto: tcp
      ignore_errors: true
    - name: Ufw port 80 
      ufw:
        rule: allow
        port: '80'
        proto: tcp
      ignore_errors: true
    - name: Ufw port 8080
      ufw:
        rule: allow
        port: '8080'
        proto: tcp
      ignore_errors: true
    - name: Starting the ufw
      ufw:
        state: enabled
    - name: Creating the user
      user:
        name: '{{ skillcloud["users"][0] }}'
        password: '{{ skillcloud["passwords"][0] | password_hash("sha512") }}'
        state: present
        shell: /bin/bash
        createhome: yes
      ignore_errors: true
- hosts: localhost
  vars_files:
    - ./Users/privvars.yml
  tasks:
    - name: SSH pub key
      shell: sshpass -p {{ skillcloud["passwords"][0] }} ssh-copy-id -f -i ./Users/id_rsa.pub {{ skillcloud["users"][0] }}@10.11.14.71
- hosts: all
  vars_files:
    - ./Users/privvars.yml
  tasks:
    - name: Creating the user
      user:
        name: '{{ skillcloud["users"][1] }}'
        password: '{{ skillcloud["passwords"][1] | password_hash("sha512") }}'
        state: present
        shell: /bin/bash
        createhome: yes
      ignore_errors: true
- hosts: localhost
  vars_files:
    - ./Users/privvars.yml
  tasks:
    - name: SSH pub key
      shell: sshpass -p {{ skillcloud["passwords"][1] }} ssh-copy-id -f -i ./Users/id_rsa.pub {{ skillcloud["users"][1] }}@10.11.14.72
- hosts: all
  vars_files:
    - ./Users/privvars.yml
  tasks:
    - name: Creating the user
      user:
        name: '{{ skillcloud["users"][2] }}'
        password: '{{ skillcloud["passwords"][2] | password_hash("sha512") }}'
        state: present
        shell: /bin/bash
        createhome: yes
      ignore_errors: true
- hosts: localhost
  vars_files:
    - ./Users/privvars.yml
  tasks:
    - name: SSH pub key
      shell: sshpass -p {{ skillcloud["passwords"][2] }} ssh-copy-id -f -i ./Users/id_rsa.pub {{ skillcloud["users"][2] }}@10.11.14.73
- hosts: all
  vars_files:
    - ./Users/privvars.yml
  tasks:
#    - name: Creating the skillcloud-nginx directory
#      file:
#       path: /skillcloud-nginx
#       state: directory
#       mode: '0777'
#     ignore_errors: true
    - name: Copying the files into skillcloud-nginx
      copy:
        src: ./skillcloud-nginx
        dest: /
        mode: '0777'
      ignore_errors: true
    - name: Docker script
      shell: /skillcloud-nginx/docker-compose.sh
    - name: SSH restart
      service:
        name: sshd
        state: restarted
      ignore_errors: true
    - name:
      shell: systemctl reboot
      ignore_errors: true
